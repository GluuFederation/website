/*Mixins*/

// Scottâ€™s Rad Mixins
//elements get appended with "__" and the $name
@mixin e($name){
    @at-root #{&}__#{$name}{
        @content;
    }
}
//modifiers get appended with "--" and the $name
@mixin m($name){
    @at-root #{&}--#{$name}{
        @content;
    }
}

@mixin box-shadow ($x-size:10px, $y-size:10px, $blur:5px, $alpha: 0.4, $spread:0) {
	box-shadow			: $x-size $y-size $blur $spread rgba(0, 0, 0, $alpha);
	-moz-box-shadow		: $x-size $y-size $blur $spread rgba(0, 0, 0, $alpha);
	-webkit-box-shadow	: $x-size $y-size $blur $spread rgba(0, 0, 0, $alpha);
}
@mixin inset-box-shadow($horizontal: 0px, $vertical: 1px, $blur: 2px, $alpha: 0.4) {
  -webkit-box-shadow: inset $horizontal $vertical $blur rgba(0, 0, 0, $alpha);
  -moz-box-shadow: inset $horizontal $vertical $blur rgba(0, 0, 0, $alpha);
  box-shadow: inset $horizontal $vertical $blur rgba(0, 0, 0, $alpha);
}
@mixin common-border-radius($radius:3px){
    border-radius			: $radius;
	-moz-border-radius		: $radius;
	-ms-border-radius		: $radius;
	-o-border-radius		: $radius;
	-webkit-border-radius	: $radius;
}
@mixin border-radius-all ($topleft: 4px, $topright: 4px, $bottomright: 4px, $bottomleft: 4px) {
	border-radius			: $topleft $topright $bottomright $bottomleft;
	-moz-border-radius		: $topleft $topright $bottomright $bottomleft;
	-ms-border-radius		: $topleft $topright $bottomright $bottomleft;
	-o-border-radius		: $topleft $topright $bottomright $bottomleft;
	-webkit-border-radius	: $topleft $topright $bottomright $bottomleft;
}
@mixin rotate ($deg) {
	-moz-transform		: rotate($deg);
	-ms-transform		: rotate($deg);
	-o-transform		: rotate($deg);
	-webkit-transform	: rotate($deg);
}
@mixin gradient-vertical ($firstColor: #FFF, $secondColor: #DDD, $firstPosition:0%) {
	background	: $firstColor; /* Fallback solid color for old browsers */
	background	: linear-gradient(to bottom, $firstColor $firstPosition, $secondColor 100%); /* W3C */
	background	: -moz-linear-gradient(top, $firstColor $firstPosition, $secondColor 100%); /* FF 3.6+ */
	background	: -ms-linear-gradient(top, $firstColor $firstPosition, $secondColor 100%); /* IE 10+ */
	background	: -o-linear-gradient(top, $firstColor $firstPosition, $secondColor 100%); /* Opera 11.10+ */
	background	: -webkit-linear-gradient(top, $firstColor $firstPosition,$secondColor 100%); /* Chrome 10+, Safari 5.1+ */
	background	: -webkit-gradient(linear, left top, left bottom, color-stop($firstPosition,$firstColor), color-stop(100%,$secondColor)); /* Chrome, Safari 4+ */
	filter		: progid:DXImageTransform.Microsoft.gradient(startColorstr= '#{$firstColor}', endColorstr= '#{$secondColor}', GradientType=0); /* IE 6-9 */
}
@mixin gradient-horizontal ($firstColor: #FFF, $secondColor: #DDD) {
	background	: $firstColor; /* Fallback solid color for old browsers */
	background	: linear-gradient(to right, $firstColor 0%, $secondColor 100%); /* W3C */
	background	: -moz-linear-gradient(left,  $firstColor 0%, $secondColor 100%); /* FF 3.6+ */
	background	: -ms-linear-gradient(left, $firstColor 0%, $secondColor 100%); /* IE 10+ */
	background	: -o-linear-gradient(left, $firstColor 0%, $secondColor 100%); /* Opera 11.10+ */
	background	: -webkit-linear-gradient(left,  $firstColor 0%,$secondColor 100%); /* Chrome 10+, Safari 5.1+ */
	background	: -webkit-gradient(linear, left top, right top, color-stop(0%,$firstColor), color-stop(100%,$secondColor)); /* Chrome, Safari 4+ */
	filter		: progid:DXImageTransform.Microsoft.gradient(startColorstr= '#{$firstColor}', endColorstr= '#{$secondColor}', GradientType=1); /* IE 6-9 */
}

@mixin transition ($type:all, $time:0.2s, $ease:ease-in) {
    transition			: $type $time $ease;
    -moz-transition		: $type $time $ease;
    -webkit-transition	: $type $time $ease;
    -o-transition		: $type $time $ease;
}

//example mixins
@mixin foo($width: null, $height: null){
    width: $width;
    height: $height;
}

//my mixins
@mixin reset-margin-padding{
    margin:0;
	padding:0;
}
%cover-absolute{
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}
/*@mixin title-style($color, $background) {
    margin: 0 0 20px 0;
    font-family: $font-serif;
    font-size:20px;
    font-weight: bold;
    text-transform:uppercase;
    color: $color;
    background: $background;
}*/
@mixin text-style($fsize: null, $lheight: null, $fweight: null, $fcolor: null){
    font-size: $fsize;
    line-height: $lheight;
    font-weight: $fweight;
    color: $fcolor;
}

@mixin btn-bg($bg-color: blue){
    background-color:$bg-color;
    &:hover{
        background-color: darken($bg-color, 10%);
    }
}

@mixin btn-text($btn-text: white){
    &:link, &:hover, &:active, &:visited{
        color:$btn-text;
    }
}

// retina.sass
// A helper mixin for applying high-resolution background images (http://www.retinajs.com)

// Submitted by Nathan Crank
// nathancrank.com

@mixin at2x($path, $ext: "jpg", $w: auto, $h: auto) {
  $at1x_path: "#{$path}.#{$ext}";
  $at2x_path: "#{$path}@2x.#{$ext}";

  background-image: url("#{$at1x_path}");

  @media all and (-webkit-min-device-pixel-ratio : 1.5),
         all and (-o-min-device-pixel-ratio: 3/2),
         all and (min--moz-device-pixel-ratio: 1.5),
         all and (min-device-pixel-ratio: 1.5) {
           background-image: url("#{$at2x_path}");
           background-size: $w $h;
  }
}



